{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAiSS3NOiTo6P5rndfnhffU1Fe51IZYTtE\",\n  authDomain: \"crwn-db-31cea.firebaseapp.com\",\n  projectId: \"crwn-db-31cea\",\n  storageBucket: \"crwn-db-31cea.appspot.com\",\n  messagingSenderId: \"1042868289710\",\n  appId: \"1:1042868289710:web:f374be56c0a2fb8a4cad3f\",\n  measurementId: \"G-5DVKNRPZVH\"\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exit) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdDate = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdDate,\n        ...additionalData\n      });\n    } catch (err) {\n      console.log('error creating user', err.message);\n    }\n  }\n\n  return userRef;\n}; // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  console.log('obj', objectsToAdd);\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      items,\n      title\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc._id,\n      title,\n      items\n    };\n  });\n  console.log('transformedCollection', transformedCollection);\n  return null;\n};\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n}); // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/cyril/crwn-clothing/src/firebase/index.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","snapShot","get","exit","displayName","email","createdDate","Date","set","err","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","items","title","data","routeName","encodeURI","toLowerCase","id","_id","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAiSS3NOiTo6P5rndfnhffU1Fe51IZYTtE\",\n    authDomain: \"crwn-db-31cea.firebaseapp.com\",\n    projectId:\"crwn-db-31cea\",\n    storageBucket: \"crwn-db-31cea.appspot.com\",\n    messagingSenderId: \"1042868289710\",\n    appId: \"1:1042868289710:web:f374be56c0a2fb8a4cad3f\",\n    measurementId: \"G-5DVKNRPZVH\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) {\n        return;\n    }\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n    const snapShot = await userRef.get();\n\n    if (!snapShot.exit) {\n        const { displayName, email } = userAuth;\n        const createdDate = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdDate,\n                ...additionalData,\n            });\n        } catch(err) {\n            console.log('error creating user', err.message);\n        }\n    \n    }\n    return userRef;\n};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n    const batch = firestore.batch();\n    console.log('obj', objectsToAdd);\n    objectsToAdd.forEach((obj) => {\n        const newDocRef = collectionRef.doc();\n        batch.set(newDocRef, obj);\n    });\n    return await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n    const transformedCollection = collections.docs.map((doc) => {\n        const { items, title } = doc.data();\n        return {\n            routeName: encodeURI(title.toLowerCase()),\n            id: doc._id,\n            title,\n            items,\n        };\n\n    });\n    console.log('transformedCollection', transformedCollection);\n    return null;\n\n};\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}