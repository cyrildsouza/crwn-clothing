{"ast":null,"code":"var _jsxFileName = \"/Users/cyril/crwn-clothing/src/pages/shopPage/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport CollectionOverview from '../../components/collectionOverview';\nimport Category from '../category';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Loading = () => /*#__PURE__*/_jsxDEV(\"i\", {\n  className: \"fas fa-spinner\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 24\n}, this);\n\n_c = Loading;\n\nconst ShopPage = ({\n  match\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const collectionRef = firestore.collection('collections'); // fetch('https://firestore.googleapis.com/v1/projects/crwn-db-31cea/databases/(default)/documents/collections')\n    //     .then(response => response.json())\n    //     .then(colllections => console.log(colllections));\n    // Promise Pattern\n\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch({\n        type: 'SET_SHOP',\n        data: collectionsMap\n      });\n      setIsLoading(false);\n    }); // Observable Pattern\n    // const unsunscribeFromSnapshot = collectionRef.onSnapshot(async(snapshot) => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //     dispatch({\n    //         type: 'SET_SHOP',\n    //         data: collectionsMap,\n    //     });\n    // });\n    // setIsLoading(false);\n    // return () => {\n    //     unsunscribeFromSnapshot();\n    // };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-page\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: isLoading ? Loading : CollectionOverview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/:category`,\n      component: Category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShopPage, \"84cOXFpDysyUdFEQc20EfXq+dfc=\", false, function () {\n  return [useDispatch];\n});\n\n_c2 = ShopPage;\nexport default ShopPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Loading\");\n$RefreshReg$(_c2, \"ShopPage\");","map":{"version":3,"sources":["/Users/cyril/crwn-clothing/src/pages/shopPage/index.tsx"],"names":["React","useEffect","useState","Route","useDispatch","CollectionOverview","Category","firestore","convertCollectionsSnapshotToMap","Loading","ShopPage","match","dispatch","isLoading","setIsLoading","collectionRef","collection","get","then","snapshot","collectionsMap","type","data","path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,gBAA3D;;;AAMA,MAAMC,OAAO,GAAG,mBAAO;AAAG,EAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,QAAvB;;KAAMA,O;;AACN,MAAMC,QAAyC,GAAE,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAC5D,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMc,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB,CADY,CAGZ;AACA;AACA;AAEA;;AACAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACnC,YAAMC,cAAc,GAAGZ,+BAA+B,CAACW,QAAD,CAAtD;AACAP,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAE,UADD;AAELC,QAAAA,IAAI,EAAEF;AAFD,OAAD,CAAR;AAIAN,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAPD,EARY,CAkBZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GA9BQ,EA8BN,CAACF,QAAD,CA9BM,CAAT;AAgCA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACY,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEV,SAAS,GAAIJ,OAAJ,GAAcJ;AAAtE;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEM,KAAK,CAACY,IAAK,YAA3B;AAAwC,MAAA,SAAS,EAAEjB;AAAnD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAzCD;;GAAMI,Q;UACeN,W;;;MADfM,Q;AA2CN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport CollectionOverview from '../../components/collectionOverview';\nimport Category from '../category';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase';\n\ninterface IProps {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    match: any;\n}\nconst Loading = () => (<i className=\"fas fa-spinner\"></i>);\nconst ShopPage: React.FunctionComponent<IProps>= ({ match }) => {\n    const dispatch = useDispatch();\n    const [isLoading, setIsLoading] = useState(true);\n    useEffect(() => {\n        const collectionRef = firestore.collection('collections');\n\n        // fetch('https://firestore.googleapis.com/v1/projects/crwn-db-31cea/databases/(default)/documents/collections')\n        //     .then(response => response.json())\n        //     .then(colllections => console.log(colllections));\n\n        // Promise Pattern\n        collectionRef.get().then((snapshot) => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch({\n                type: 'SET_SHOP',\n                data: collectionsMap,\n            });\n            setIsLoading(false);\n        });\n\n\n        // Observable Pattern\n        // const unsunscribeFromSnapshot = collectionRef.onSnapshot(async(snapshot) => {\n        //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        //     dispatch({\n        //         type: 'SET_SHOP',\n        //         data: collectionsMap,\n        //     });\n        // });\n        // setIsLoading(false);\n        // return () => {\n        //     unsunscribeFromSnapshot();\n        // };\n    }, [dispatch]);\n    \n    return (\n        <div className=\"shop-page\">\n            <Route exact path={`${match.path}`} component={isLoading ?  Loading : CollectionOverview} />\n            <Route path={`${match.path}/:category`} component={Category} />\n        </div>\n    );\n};\n\nexport default ShopPage;\n"]},"metadata":{},"sourceType":"module"}