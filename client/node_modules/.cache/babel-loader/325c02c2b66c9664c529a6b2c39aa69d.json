{"ast":null,"code":"var _jsxFileName = \"/Users/cyril/crwn-clothing/src/pages/shopPage/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport CollectionOverview from '../../components/collectionOverview';\nimport Category from '../category';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ShopPage = ({\n  match\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const collectionRef = firestore.collection('collections');\n    const unsunscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch({\n        type: 'SET_SHOP',\n        data: collectionsMap\n      });\n    });\n    setIsLoading(false);\n    return () => {\n      unsunscribeFromSnapshot();\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shop-page\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/:category`,\n      component: Category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ShopPage, \"84cOXFpDysyUdFEQc20EfXq+dfc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ShopPage;\nexport default ShopPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShopPage\");","map":{"version":3,"sources":["/Users/cyril/crwn-clothing/src/pages/shopPage/index.tsx"],"names":["React","useEffect","useState","Route","useDispatch","CollectionOverview","Category","firestore","convertCollectionsSnapshotToMap","ShopPage","match","dispatch","isLoading","setIsLoading","collectionRef","collection","unsunscribeFromSnapshot","onSnapshot","snapshot","collectionsMap","type","data","path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,gBAA3D;;;AAOA,MAAMC,QAAyC,GAAE,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AAC5D,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,uBAAuB,GAAGF,aAAa,CAACG,UAAd,CAAyB,MAAMC,QAAN,IAAmB;AACxE,YAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD;AACAP,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAE,UADD;AAELC,QAAAA,IAAI,EAAEF;AAFD,OAAD,CAAR;AAIH,KAN+B,CAAhC;AAOAN,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,WAAO,MAAM;AACTG,MAAAA,uBAAuB;AAC1B,KAFD;AAGH,GAbQ,EAaN,CAACL,QAAD,CAbM,CAAT;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACY,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEjB;AAA/C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEK,KAAK,CAACY,IAAK,YAA3B;AAAwC,MAAA,SAAS,EAAEhB;AAAnD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAvBD;;GAAMG,Q;UACeL,W;;;KADfK,Q;AAyBN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport CollectionOverview from '../../components/collectionOverview';\nimport Category from '../category';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase';\n\ninterface IProps {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    match: any;\n}\n\nconst ShopPage: React.FunctionComponent<IProps>= ({ match }) => {\n    const dispatch = useDispatch();\n    const [isLoading, setIsLoading] = useState(true);\n    useEffect(() => {\n        const collectionRef = firestore.collection('collections');\n        const unsunscribeFromSnapshot = collectionRef.onSnapshot(async(snapshot) => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch({\n                type: 'SET_SHOP',\n                data: collectionsMap,\n            });\n        });\n        setIsLoading(false);\n        return () => {\n            unsunscribeFromSnapshot();\n        };\n    }, [dispatch]);\n    return (\n        <div className=\"shop-page\">\n            <Route exact path={`${match.path}`} component={CollectionOverview} />\n            <Route path={`${match.path}/:category`} component={Category} />\n        </div>\n    );\n};\n\nexport default ShopPage;\n"]},"metadata":{},"sourceType":"module"}