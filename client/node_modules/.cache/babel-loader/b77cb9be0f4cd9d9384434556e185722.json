{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_APIKEY,\n  authDomain: process.env.REACT_APP_authDomain,\n  projectId: \"crwn-db-31cea\",\n  storageBucket: \"crwn-db-31cea.appspot.com\",\n  messagingSenderId: \"1042868289710\",\n  appId: \"1:1042868289710:web:f374be56c0a2fb8a4cad3f\",\n  measurementId: \"G-5DVKNRPZVH\"\n};\nconsole.log('*************', firebaseConfig.apiKey);\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exit) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdDate = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdDate,\n        ...additionalData\n      });\n    } catch (err) {\n      console.log('error creating user', err.message);\n    }\n  }\n\n  return userRef;\n};\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/cyril/crwn-clothing/src/firebase/index.js"],"names":["firebase","firebaseConfig","apiKey","process","env","REACT_APP_APIKEY","authDomain","REACT_APP_authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","console","log","initializeApp","auth","firestore","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","snapShot","get","exit","displayName","email","createdDate","Date","set","err","message","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBADD;AAEnBC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,oBAFL;AAGnBC,EAAAA,SAAS,EAAE,eAHQ;AAInBC,EAAAA,aAAa,EAAE,2BAJI;AAKnBC,EAAAA,iBAAiB,EAAE,eALA;AAMnBC,EAAAA,KAAK,EAAE,4CANY;AAOnBC,EAAAA,aAAa,EAAE;AAPI,CAAvB;AASAC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4Bb,cAAc,CAACC,MAA3C;AACAF,QAAQ,CAACe,aAAT,CAAuBd,cAAvB;AAEA,OAAO,MAAMe,IAAI,GAAGhB,QAAQ,CAACgB,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGjB,QAAQ,CAACiB,SAAT,EAAlB;AAEP,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AACX;AACH;;AAED,QAAME,OAAO,GAAGJ,SAAS,CAACK,GAAV,CAAe,SAAQH,QAAQ,CAACI,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,IAAd,EAAoB;AAChB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBT,QAA/B;AACA,UAAMU,WAAW,GAAG,IAAIC,IAAJ,EAApB;;AAEA,QAAI;AACA,YAAMT,OAAO,CAACU,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,WAHc;AAId,WAAGT;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAMY,GAAN,EAAW;AACTnB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCkB,GAAG,CAACC,OAAvC;AACH;AAEJ;;AACD,SAAOZ,OAAP;AACH,CA1BM;AA4BP,MAAMa,QAAQ,GAAG,IAAIlC,QAAQ,CAACgB,IAAT,CAAcmB,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMtB,IAAI,CAACuB,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAelC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_APIKEY,\n    authDomain: process.env.REACT_APP_authDomain,\n    projectId: \"crwn-db-31cea\",\n    storageBucket: \"crwn-db-31cea.appspot.com\",\n    messagingSenderId: \"1042868289710\",\n    appId: \"1:1042868289710:web:f374be56c0a2fb8a4cad3f\",\n    measurementId: \"G-5DVKNRPZVH\"\n};\nconsole.log('*************',firebaseConfig.apiKey);\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) {\n        return;\n    }\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n    const snapShot = await userRef.get();\n\n    if (!snapShot.exit) {\n        const { displayName, email } = userAuth;\n        const createdDate = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdDate,\n                ...additionalData,\n            });\n        } catch(err) {\n            console.log('error creating user', err.message);\n        }\n    \n    }\n    return userRef;\n};\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}