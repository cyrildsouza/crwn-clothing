{"ast":null,"code":"var _jsxFileName = \"/Users/cyril/crwn-clothing/src/components/signUp/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport FormInput from '../formInput';\nimport CustomButton from '../customButton';\nimport { auth, createUserProfileDocument } from '../../firebase';\nimport './signUpStyle.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = () => {\n  _s();\n\n  const [displayName, setDisplayName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmedPassword, setConfirmedPassword] = useState('');\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    if (password !== confirmedPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    try {\n      const {\n        user\n      } = await auth.createUserWithEmailAndPassword(email, password);\n      await createUserProfileDocument(user, {\n        displayName\n      });\n      setDisplayName('');\n      setEmail('');\n      setPassword('');\n      setConfirmedPassword('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I do not have a account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        value: displayName,\n        handleChange: e => setDisplayName(e.target.value),\n        label: \"Display Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        value: email,\n        handleChange: e => setEmail(e.target.value),\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        value: password,\n        handleChange: e => setPassword(e.target.value),\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        value: confirmedPassword,\n        handleChange: e => setConfirmedPassword(e.target.value),\n        label: \"Confirm password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"FARhk6XcTcSmNQjYdcmPKy1xAWE=\");\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/cyril/crwn-clothing/src/components/signUp/index.tsx"],"names":["React","useState","FormInput","CustomButton","auth","createUserProfileDocument","SignUp","displayName","setDisplayName","email","setEmail","password","setPassword","confirmedPassword","setConfirmedPassword","onSubmit","e","preventDefault","alert","user","createUserWithEmailAndPassword","err","console","error","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport FormInput from '../formInput';\nimport CustomButton from '../customButton';\nimport { auth, createUserProfileDocument } from '../../firebase';\nimport './signUpStyle.scss';\n\nconst SignUp: React.FunctionComponent = () => {\n    const [displayName, setDisplayName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [confirmedPassword, setConfirmedPassword] = useState('');\n\n    const onSubmit = async (e: React.SyntheticEvent) => {\n        e.preventDefault();\n        if (password !== confirmedPassword) {\n            alert(\"passwords don't match\");\n            return;\n        }\n\n        try {\n            const { user } = await auth.createUserWithEmailAndPassword(email, password);\n            await createUserProfileDocument(user, { displayName });\n            setDisplayName('');\n            setEmail('');\n            setPassword('');\n            setConfirmedPassword('');\n        } catch (err) {\n            console.error(err);\n        }\n       \n    };\n\n    return (\n        <div className=\"sign-up\">\n            <h2 className=\"title\">I do not have a account</h2>\n            <span>Sign up with your email and password</span>\n            <form className=\"sign-up-form\" onSubmit={onSubmit}>\n                <FormInput\n                    type='text'\n                    value={displayName}\n                    handleChange={(e) => setDisplayName(e.target.value)}\n                    label='Display Name'\n                    required\n                />\n                <FormInput\n                    type='email'\n                    value={email}\n                    handleChange={(e) => setEmail(e.target.value)}\n                    label='Email'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    value={password}\n                    handleChange={(e) => setPassword(e.target.value)}\n                    label='Password'\n                    required\n                />\n                <FormInput\n                    type='password'\n                    value={confirmedPassword}\n                    handleChange={(e) => setConfirmedPassword(e.target.value)}\n                    label='Confirm password'\n                    required\n                />\n                <CustomButton type='submit'>Sign Up</ CustomButton>\n            </form>\n        </div>\n    );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}