{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cyril/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/cyril/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/cyril/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var firebaseConfig={apiKey:\"AIzaSyAiSS3NOiTo6P5rndfnhffU1Fe51IZYTtE\",authDomain:\"crwn-db-31cea.firebaseapp.com\",projectId:\"crwn-db-31cea\",storageBucket:\"crwn-db-31cea.appspot.com\",messagingSenderId:\"1042868289710\",appId:\"1:1042868289710:web:f374be56c0a2fb8a4cad3f\",measurementId:\"G-5DVKNRPZVH\"};firebase.initializeApp(firebaseConfig);export var auth=firebase.auth();export var firestore=firebase.firestore();export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapShot,displayName,email,createdDate;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:snapShot=_context.sent;if(snapShot.exit){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdDate=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdDate:createdDate},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log('error creating user',_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();var provider=new firebase.auth.GoogleAuthProvider();provider.setCustomParameters({prompt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(provider);};export default firebase;","map":{"version":3,"sources":["/Users/cyril/crwn-clothing/src/firebase/index.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","get","snapShot","exit","displayName","email","createdDate","Date","set","console","log","message","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"+aAAA,MAAOA,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAO,oBAAP,CACA,MAAO,eAAP,CAEA,GAAMC,CAAAA,cAAc,CAAG,CACnBC,MAAM,CAAE,yCADW,CAEnBC,UAAU,CAAE,+BAFO,CAGnBC,SAAS,CAAE,eAHQ,CAInBC,aAAa,CAAE,2BAJI,CAKnBC,iBAAiB,CAAE,eALA,CAMnBC,KAAK,CAAE,4CANY,CAOnBC,aAAa,CAAE,cAPI,CAAvB,CAUAR,QAAQ,CAACS,aAAT,CAAuBR,cAAvB,EAEA,MAAO,IAAMS,CAAAA,IAAI,CAAGV,QAAQ,CAACU,IAAT,EAAb,CACP,MAAO,IAAMC,CAAAA,SAAS,CAAGX,QAAQ,CAACW,SAAT,EAAlB,CAEP,MAAO,IAAMC,CAAAA,yBAAyB,0FAAG,iBAAOC,QAAP,CAAiBC,cAAjB,wKAChCD,QADgC,iEAK/BE,OAL+B,CAKrBJ,SAAS,CAACK,GAAV,iBAAuBH,QAAQ,CAACI,GAAhC,EALqB,uBAOdF,CAAAA,OAAO,CAACG,GAAR,EAPc,QAO/BC,QAP+B,kBAShCA,QAAQ,CAACC,IATuB,0BAUzBC,WAVyB,CAUFR,QAVE,CAUzBQ,WAVyB,CAUZC,KAVY,CAUFT,QAVE,CAUZS,KAVY,CAW3BC,WAX2B,CAWb,GAAIC,CAAAA,IAAJ,EAXa,wCAcvBT,CAAAA,OAAO,CAACU,GAAR,gBACFJ,WAAW,CAAXA,WADE,CAEFC,KAAK,CAALA,KAFE,CAGFC,WAAW,CAAXA,WAHE,EAICT,cAJD,EAduB,0FAqB7BY,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmC,YAAIC,OAAvC,EArB6B,wCAyB9Bb,OAzB8B,uEAAH,kBAAzBH,CAAAA,yBAAyB,gDAA/B,CA4BP,GAAMiB,CAAAA,QAAQ,CAAG,GAAI7B,CAAAA,QAAQ,CAACU,IAAT,CAAcoB,kBAAlB,EAAjB,CACAD,QAAQ,CAACE,mBAAT,CAA6B,CAAEC,MAAM,CAAE,gBAAV,CAA7B,EACA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAMvB,CAAAA,IAAI,CAACwB,eAAL,CAAqBL,QAArB,CAAN,EAAzB,CAEP,cAAe7B,CAAAA,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAiSS3NOiTo6P5rndfnhffU1Fe51IZYTtE\",\n    authDomain: \"crwn-db-31cea.firebaseapp.com\",\n    projectId: \"crwn-db-31cea\",\n    storageBucket: \"crwn-db-31cea.appspot.com\",\n    messagingSenderId: \"1042868289710\",\n    appId: \"1:1042868289710:web:f374be56c0a2fb8a4cad3f\",\n    measurementId: \"G-5DVKNRPZVH\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) {\n        return;\n    }\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n    const snapShot = await userRef.get();\n\n    if (!snapShot.exit) {\n        const { displayName, email } = userAuth;\n        const createdDate = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdDate,\n                ...additionalData,\n            });\n        } catch(err) {\n            console.log('error creating user', err.message);\n        }\n    \n    }\n    return userRef;\n};\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}